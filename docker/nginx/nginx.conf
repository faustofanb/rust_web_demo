user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
    upstream kafka_ui {
        server kafka-ui:8080;
    }

    upstream kibana {
        server kibana:5601;
    }

    upstream grafana {
        server grafana:3000;
    }

    upstream jaeger {
        server jaeger:16686;
    }

    upstream prometheus {
        server prometheus:9090;
    }

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Kafka UI
        location /kafka/ {
            proxy_pass http://kafka_ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Kibana
        location /kibana/ {
            proxy_pass http://kibana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Jaeger
        location /jaeger/ {
            proxy_pass http://jaeger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 默认页面
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Rust Web Demo - 中间件管理</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; text-align: center; }
        .services { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 30px; }
        .service { background: #f8f9fa; padding: 20px; border-radius: 6px; border-left: 4px solid #007bff; }
        .service h3 { margin: 0 0 10px 0; color: #007bff; }
        .service p { margin: 5px 0; color: #666; }
        .service a { color: #007bff; text-decoration: none; }
        .service a:hover { text-decoration: underline; }
        .status { display: inline-block; width: 10px; height: 10px; border-radius: 50%; background: #28a745; margin-right: 8px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>🚀 Rust Web Demo - 中间件管理</h1>
        <div class="services">
            <div class="service">
                <h3><span class="status"></span>Kafka UI</h3>
                <p>Kafka集群管理和监控</p>
                <p><a href="/kafka/" target="_blank">访问 Kafka UI</a></p>
            </div>
            <div class="service">
                <h3><span class="status"></span>Kibana</h3>
                <p>Elasticsearch数据可视化</p>
                <p><a href="/kibana/" target="_blank">访问 Kibana</a></p>
            </div>
            <div class="service">
                <h3><span class="status"></span>Grafana</h3>
                <p>监控数据可视化 (admin/admin123)</p>
                <p><a href="/grafana/" target="_blank">访问 Grafana</a></p>
            </div>
            <div class="service">
                <h3><span class="status"></span>Jaeger</h3>
                <p>分布式链路追踪</p>
                <p><a href="/jaeger/" target="_blank">访问 Jaeger</a></p>
            </div>
            <div class="service">
                <h3><span class="status"></span>Prometheus</h3>
                <p>监控指标收集</p>
                <p><a href="/prometheus/" target="_blank">访问 Prometheus</a></p>
            </div>
            <div class="service">
                <h3><span class="status"></span>MinIO</h3>
                <p>对象存储服务 (minioadmin/minioadmin123)</p>
                <p><a href="http://localhost:9001" target="_blank">访问 MinIO Console</a></p>
            </div>
        </div>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}
